{"ast":null,"code":"import _slicedToArray from\"C:/Users/licos/Desktop/projects/shop_online/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";import React,{useContext,useEffect,useState}from'react';import{BrowserRouter}from'react-router-dom';import AppRouter from'./components/AppRouter';import NavBar from'./components/NavBar';import{observer}from'mobx-react-lite';import{Context}from'.';import{check}from'../src/http/userAPI';import{Spinner}from'react-bootstrap';import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";var App=observer(function(){var _useContext=useContext(Context),user=_useContext.user;var _useState=useState(true),_useState2=_slicedToArray(_useState,2),isLoading=_useState2[0],setIsLoading=_useState2[1];useEffect(function(){check().then(function(data){user.setUser(data);user.setIsAuth(true);}).finally(function(){setIsLoading(false);});},[]);if(isLoading){return/*#__PURE__*/_jsx(Spinner,{animation:\"grow\"});}return/*#__PURE__*/_jsxs(BrowserRouter,{children:[/*#__PURE__*/_jsx(NavBar,{}),/*#__PURE__*/_jsx(AppRouter,{})]});});export default App;","map":{"version":3,"sources":["C:/Users/licos/Desktop/projects/shop_online/client/src/App.js"],"names":["React","useContext","useEffect","useState","BrowserRouter","AppRouter","NavBar","observer","Context","check","Spinner","App","user","isLoading","setIsLoading","then","data","setUser","setIsAuth","finally"],"mappings":"yKAAA,MAAOA,CAAAA,KAAP,EAAgBC,UAAhB,CAA4BC,SAA5B,CAAuCC,QAAvC,KAAuD,OAAvD,CACA,OAASC,aAAT,KAA8B,kBAA9B,CACA,MAAOC,CAAAA,SAAP,KAAsB,wBAAtB,CACA,MAAOC,CAAAA,MAAP,KAAmB,qBAAnB,CACA,OAASC,QAAT,KAAyB,iBAAzB,CACA,OAASC,OAAT,KAAwB,GAAxB,CACA,OAASC,KAAT,KAAsB,qBAAtB,CACA,OAASC,OAAT,KAAwB,iBAAxB,C,wFAGA,GAAMC,CAAAA,GAAG,CAAGJ,QAAQ,CAAC,UAAM,CACzB,gBAAiBN,UAAU,CAACO,OAAD,CAA3B,CAAQI,IAAR,aAAQA,IAAR,CACA,cAAkCT,QAAQ,CAAC,IAAD,CAA1C,wCAAOU,SAAP,eAAkBC,YAAlB,eAEAZ,SAAS,CAAC,UAAM,CACdO,KAAK,GAAGM,IAAR,CAAa,SAAAC,IAAI,CAAI,CACnBJ,IAAI,CAACK,OAAL,CAAaD,IAAb,EACAJ,IAAI,CAACM,SAAL,CAAe,IAAf,EACD,CAHD,EAGGC,OAHH,CAGW,UAAM,CACfL,YAAY,CAAC,KAAD,CAAZ,CACD,CALD,EAMD,CAPQ,CAON,EAPM,CAAT,CASA,GAAID,SAAJ,CAAe,CACb,mBAAO,KAAC,OAAD,EAAS,SAAS,CAAE,MAApB,EAAP,CACD,CAED,mBACE,MAAC,aAAD,yBACE,KAAC,MAAD,IADF,cAEE,KAAC,SAAD,IAFF,GADF,CAMD,CAvBmB,CAApB,CAyBA,cAAeF,CAAAA,GAAf","sourcesContent":["import React, { useContext, useEffect, useState } from 'react'\nimport { BrowserRouter } from 'react-router-dom';\nimport AppRouter from './components/AppRouter';\nimport NavBar from './components/NavBar';\nimport { observer } from 'mobx-react-lite'\nimport { Context } from '.';\nimport { check } from '../src/http/userAPI';\nimport { Spinner } from 'react-bootstrap';\n\n\nconst App = observer(() => {\n  const { user } = useContext(Context)\n  const [isLoading, setIsLoading] = useState(true)\n\n  useEffect(() => {\n    check().then(data => {\n      user.setUser(data)\n      user.setIsAuth(true)\n    }).finally(() => {\n      setIsLoading(false)\n    })\n  }, [])\n\n  if (isLoading) {\n    return <Spinner animation={\"grow\"} />\n  }\n\n  return (\n    <BrowserRouter>\n      <NavBar />\n      <AppRouter />\n    </BrowserRouter>\n  )\n})\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}